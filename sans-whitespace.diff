diff --git a/.coafile b/.coafile
new file mode 100644
index 0000000..240cf9a
--- /dev/null
+++ b/.coafile
@@ -0,0 +1,11 @@
+# Generated by coala-quickstart on 05 Nov 2017.
+[default]
+bears = FilenameBear, coalaBear, InvalidLinkBear
+files = **.cpp, **.yml
+ignore = 
+[yaml]
+bears = YAMLLintBear, LineLengthBear
+files = **.yml
+[c++]
+bears = ClangComplexityBear, GNUIndentBear, CPPCheckBear, CPPCleanBear
+files = **.cpp
diff --git a/.gitignore b/.gitignore
new file mode 100644
index 0000000..e69de29
diff --git a/coala-ci.log b/coala-ci.log
new file mode 100644
index 0000000..dc7668b
--- /dev/null
+++ b/coala-ci.log
@@ -0,0 +1,143 @@
+Executing section Default...
+|    | [NORMAL] FilenameBear:
+|    | Filename does not follow snake naming-convention.
+|----|    | a/Linked List.cpp
+|    |++++| b/linked_list.cpp
+
+.travis.yml
+|  12| ••#•Create•two•diff•files,•and•upload•to•https://clbin.com
+|    | [NORMAL] InvalidLinkBear:
+|    | Broken link - unable to connect to https://clbin.com (HTTP Error: 404)
+
+.travis.yml
+|  17| ••-•cat•sans-whitespace.diff•|•curl•-F•'clbin=<-'•https://clbin.com
+|    | [NORMAL] InvalidLinkBear:
+|    | Broken link - unable to connect to https://clbin.com (HTTP Error: 404)
+
+.travis.yml
+|  19| ••-•cat•with-whitespace.diff•|•curl•-F•'clbin=<-'•https://clbin.com
+|    | [NORMAL] InvalidLinkBear:
+|    | Broken link - unable to connect to https://clbin.com (HTTP Error: 404)
+
+.travis.yml
+|  20| ••#•Upload•logs•to•https://clbin.com
+|    | [NORMAL] InvalidLinkBear:
+|    | Broken link - unable to connect to https://clbin.com (HTTP Error: 404)
+
+.travis.yml
+|  21| ••-•cat•coala-ci.log•|•curl•-F•'clbin=<-'•https://clbin.com
+|    | [NORMAL] InvalidLinkBear:
+|    | Broken link - unable to connect to https://clbin.com (HTTP Error: 404)
+Executing section yaml...
+
+.travis.yml
+|  22| 
+|    | [MAJOR] YAMLLintBear:
+|    | too many blank lines (1 > 0) (empty-lines)
+Executing section c++...
+|    | [NORMAL] GNUIndentBear:
+|    | Indentation can be improved.
+|----|    | /app/Linked List.cpp
+|    |++++| /app/Linked List.cpp
+|   2|   2| #include<stdlib.h>
+|   3|   3| struct node
+|   4|   4| {
+|   5|    |-	int data;
+|   6|    |-	struct node* next;
+|    |   5|+    int data;
+|    |   6|+    struct node *next;
+|   7|   7| };
+|   8|    |-void insert(int);
+|   9|    |-void print(void);
+|    |   8|+void insert (int);
+|    |   9|+void print (void);
+|  10|  10| 
+|  11|    |-struct node* head;
+|    |  11|+struct node *head;
+|  12|  12| 
+|  13|    |-int main()
+|    |  13|+int
+|    |  14|+main ()
+|  14|  15| {
+|  15|    |-	head=NULL;
+|  16|    |-	int no,i;
+|  17|    |-	printf("how many nos?\n");
+|  18|    |-	scanf("%d",&no);
+|  19|    |-	for(i=0;i<no;i++)
+|  20|    |-	{
+|  21|    |-		int x;
+|  22|    |-		printf("Enter a no: ");
+|  23|    |-		scanf("%d",&x);
+|  24|    |-		insert(x);
+|  25|    |-		print();
+|  26|    |-	}
+|  27|    |-			
+|  28|    |-	return 0;
+|    |  16|+    head = NULL;
+|    |  17|+    int no, i;
+|    |  18|+    printf ("how many nos?\n");
+|    |  19|+    scanf ("%d", &no);
+|    |  20|+    for (i = 0; i < no; i++)
+|    |  21|+      {
+|    |  22|+          int x;
+|    |  23|+          printf ("Enter a no: ");
+|    |  24|+          scanf ("%d", &x);
+|    |  25|+          insert (x);
+|    |  26|+          print ();
+|    |  27|+      }
+|    |  28|+
+|    |  29|+    return 0;
+|  29|  30| }
+|  30|    |-void insert(int no)
+|    |  31|+void
+|    |  32|+insert (int no)
+|  31|  33| {
+|  32|    |-	node* temp=(node*) malloc(sizeof(node));
+|  33|    |-	temp->data=no;
+|  34|    |-	(*temp).next=head;
+|  35|    |-	head=temp;
+|  36|    |-	
+|    |  34|+    node *temp = (node *) malloc (sizeof (node));
+|    |  35|+    temp->data = no;
+|    |  36|+    (*temp).next = head;
+|    |  37|+    head = temp;
+|    |  38|+
+|  37|  39| }
+|  38|    |-void print()
+|    |  40|+void
+|    |  41|+print ()
+|  39|  42| {
+|  40|    |-	struct node* temp=head;
+|  41|    |-	printf("List is---    ");
+|  42|    |-	while(temp!=NULL)
+|  43|    |-	{
+|  44|    |-	//	temp=temp->next;
+|  45|    |-		printf("%d   ",temp->data);
+|  46|    |-		temp=temp->next;
+|  47|    |-	}
+|  48|    |-	printf("\n");
+|    |  43|+    struct node *temp = head;
+|    |  44|+    printf ("List is---    ");
+|    |  45|+    while (temp != NULL)
+|    |  46|+      {
+|    |  47|+          //  temp=temp->next;
+|    |  48|+          printf ("%d   ", temp->data);
+|    |  49|+          temp = temp->next;
+|    |  50|+      }
+|    |  51|+    printf ("\n");
+|  49|  52| }
+
+Linked List.cpp
+|  30| void•insert(int•no)
+|    | [NORMAL] CPPCleanBear:
+|    | 'insert' not found in any directly #included header
+
+Linked List.cpp
+|  38| void•print()
+|    | [NORMAL] CPPCleanBear:
+|    | 'print' not found in any directly #included header
+
+Linked List.cpp
+|  11| struct•node*•head;
+|    | [NORMAL] CPPCleanBear:
+|    | static data 'head'

